name: CI Build

on:
  push:
    branches: [master]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  PROJECT_NAME: L00177804_Project
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest # Switch to a Linux-based runner
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-12]
        target-framework: [net7.0-android, net7.0-ios]
    name: Build and Test ${{ matrix.os }} ${{ matrix.target-framework }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Static code analysis step
      - name: Run static code analysis
        uses: sonarsource/sonarcloud-github-action@v1.3.1 # Use non-container-based version of the action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Setup .NET 7
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      # Dependency scanning step
      - name: Scan for dependency vulnerabilities
        uses: whitesource/foss-2025-action@v1.5 # Check if the action is available now

      - name: Restore NuGet packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget
          key: nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj

      - name: Build MAUI
        run: dotnet build ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -c Release -f ${{ matrix.target-framework }} --no-restore


