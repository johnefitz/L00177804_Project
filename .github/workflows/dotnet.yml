
name: MAUI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.git*'
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
            !~/.nuget/packages/unwanted
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        dotnet-version: [7.0.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - run: dotnet workload install maui --ignore-failed-sources

  restore:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        dotnet-version: [7.0.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - run: dotnet restore L00177804_Project/L00177804_Project.csproj

  build-android:
    needs: [cache, setup, restore]
    name: Build MAUI for Android
    runs-on: windows-latest
    strategy:
      matrix:
        os: [windows-latest]
        dotnet-version: [7.0.x]
        target-framework: [net7.0-android]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          
          dotnet-version: ${{ matrix.dotnet-version }}
      - run: dotnet build L00177804_Project/L00177804_Project.csproj -f ${{ matrix.target-framework }}


  build-ios:
    needs: [cache, setup]
    name: Build MAUI for iOS
    runs-on: macos-latest
    strategy:
      matrix:
        os: [macos-latest]
        dotnet-version: [7.0.x]
        target-framework: [net7.0-ios]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - run: dotnet workload install maui --ignore-failed-sources
      - run: dotnet restore L00177804_Project/L00177804_Project.csproj
      - run: dotnet build L00177804_Project/L00177804_Project.csproj -f ${{ matrix.target-framework }} --no-restore


  test:
    needs: [build-android, build-ios]
    name: Test MAUI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - run: dotnet test L00177804_Project/L00177804_Project.csproj

  analyze:
    needs: [build-android, build-ios, test]
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1



  publish:
    needs: [cache, build-android, build-ios, test]
    name: Publish MAUI App Artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: maui-artifact
          path: |
            L00177804_Project/bin/Release/net7.0-android/
            L00177804_Project/bin/Release/net7.0-ios/
            
  deploy:
    needs: [publish]
    name: Deploy MAUI App
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Playstore
        run: echo "Deploying to Playstore in progress"
            
      
    
