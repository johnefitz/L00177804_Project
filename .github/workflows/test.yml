# Name of the Github Actions workflow
name: Testing

# Define the events that trigger the Github Actions workflow
on:
  push:
    branches:
      - master # Only trigger the workflow on the main branch
    paths-ignore:
      - '**/*.md' # Ignore markdown files
      - '**/*.git*' # Ignore git files
  pull_request:
    branches:
      - master # Only trigger the workflow on the main branch
  workflow_dispatch:
  
# Define the environment variables to be used in the Github Actions workflow
env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  # Setup job to install .NET and MAUI workload
  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        dotnet-version: [7.0.x]
    steps:
      # Checkout the repository
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      # Install the MAUI workload
      - run: dotnet workload install maui --ignore-failed-sources

  # Test job to test the MAUI app

  test:
    needs: [setup]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    permissions:
      contents: read
      pull-requests: write
      checks: write
      statuses: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore NuGet packages
        run: dotnet restore
        working-directory: ./xUnitTests
      - name: Build solution
        run: dotnet build --configuration Release --no-restore
        working-directory: ./xUnitTests
      - name: Run tests
        run: dotnet test xUnitTests/xUnitTests.csproj
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: '**/*.xml'

        
  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@master
        with:
          check_name: Unit Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: "artifacts/**/*.xml"

    

